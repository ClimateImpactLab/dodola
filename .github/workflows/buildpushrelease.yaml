name: Build, push release

on:
  release:
    types:
    - published

jobs:
  buildpushrelease:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Set image release tag
      env:
        FULL_RELEASE_TAG: ${{ github.event.release.tag_name }}
      run: |
        echo "docker_tag=${FULL_RELEASE_TAG#v}" >> $GITHUB_ENV
    - name: Set image name
      run: |
        echo "release_image_name=${{ secrets.ACR_LOGIN_SERVER }}/dodola:${{ env.docker_tag }}" >> $GITHUB_ENV
    - name: Build container
      run: |
        docker build . -t "${{ env.release_image_name }}"
    - name: Push to registry
      run: |
        docker push "${{ env.release_image_name }}"

  buildpushrelease-gcp:
    runs-on: ubuntu-latest
    env:
      HASH: $(git rev-parse --short "$GITHUB_SHA")
      BRANCH: ${GITHUB_REF##*/}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      uses: 'google-github-actions/setup-gcloud@v0'
      with:
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - run: |
        gcloud auth configure-docker -q us-central1-docker.pkg.dev

    - name: Set image release tag
      env:
        FULL_RELEASE_TAG: ${{ github.event.release.tag_name }}
      run: |
        echo "docker_tag=${FULL_RELEASE_TAG#v}" >> $GITHUB_ENV

    - name: Set image name
      run: |
        echo "release_image_name=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/private/dodola:${{ env.docker_tag }}" >> $GITHUB_ENV

    - name: Build container
      run: |
        docker build . -t "${{ env.release_image_name }}"

    - name: Push to registry
      run: |
        docker push "${{ env.release_image_name }}"

  buildpushrelease-ghcr:
    runs-on: ubuntu-latest
    env:
      HASH: $(git rev-parse --short "$GITHUB_SHA")
      BRANCH: ${GITHUB_REF##*/}
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image release tag
        env:
          FULL_RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          echo "docker_tag=${FULL_RELEASE_TAG#v}" >> $GITHUB_ENV

      - name: Set image name
        run: |
          echo "release_image_name=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]'):${{ env.docker_tag }}" >> $GITHUB_ENV

      - name: Build container
        run: |
          docker build . -t "${{ env.release_image_name }}"

      - name: Push to registry
        run: |
          docker push "${{ env.release_image_name }}"
